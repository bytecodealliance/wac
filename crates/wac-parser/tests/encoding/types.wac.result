(component
  (type (;0;) u8)
  (export $a (;1;) "a" (type 0))
  (type (;2;) s8)
  (export $b (;3;) "b" (type 2))
  (type (;4;) u16)
  (export $c (;5;) "c" (type 4))
  (type (;6;) s16)
  (export $d (;7;) "d" (type 6))
  (type (;8;) u32)
  (export $e (;9;) "e" (type 8))
  (type (;10;) s32)
  (export $f (;11;) "f" (type 10))
  (type (;12;) u64)
  (export $g (;13;) "g" (type 12))
  (type (;14;) s64)
  (export $h (;15;) "h" (type 14))
  (type (;16;) f32)
  (export $i (;17;) "i" (type 16))
  (type (;18;) f64)
  (export $j (;19;) "j" (type 18))
  (type (;20;) bool)
  (export $k (;21;) "k" (type 20))
  (type (;22;) char)
  (export $l (;23;) "l" (type 22))
  (type (;24;) string)
  (export $m (;25;) "m" (type 24))
  (type (;26;) (list u8))
  (type (;27;) (tuple s8 u16 s16))
  (type (;28;) (option u32))
  (type (;29;) (record (field "a" 26) (field "b" 27) (field "c" 28)))
  (export $n (;30;) "n" (type 29))
  (type (;31;) (tuple $n $n $n))
  (type (;32;) (variant (case "foo") (case "bar" $n) (case "baz" 31)))
  (export $o (;33;) "o" (type 32))
  (type (;34;) (flags "foo" "bar" "baz"))
  (export $p (;35;) "p" (type 34))
  (type (;36;) (enum "a" "b" "c"))
  (export $q (;37;) "q" (type 36))
  (type (;38;)
    (component
      (type (;0;)
        (instance
          (type (;0;) string)
          (export (;1;) "a" (type (eq 0)))
          (type (;2;) u16)
          (export (;3;) "b" (type (eq 2)))
          (type (;4;) u16)
          (export (;5;) "c" (type (eq 4)))
          (export (;6;) "d" (type (sub resource)))
          (type (;7;) (own 6))
          (type (;8;) (func (param "a" 1) (result 7)))
          (export (;0;) "[constructor]d" (func (type 8)))
          (type (;9;) (borrow 6))
          (type (;10;) (func (param "self" 9) (param "b" 3)))
          (export (;1;) "[method]d.a" (func (type 10)))
          (type (;11;) (func (param "c" 5)))
          (export (;2;) "[static]d.b" (func (type 11)))
          (type (;12;) (tuple 5 3 7 1))
          (type (;13;) (func (param "a" 1) (param "b" 3) (param "c" 5) (param "d" 7) (result 12)))
          (export (;3;) "f" (func (type 13)))
        )
      )
      (export (;0;) "test:pkg/r" (instance (type 0)))
    )
  )
  (export $r (;39;) "r" (type 38))
  (type (;40;)
    (component
      (type (;0;)
        (instance
          (type (;0;) string)
          (export (;1;) "a" (type (eq 0)))
          (type (;2;) u16)
          (export (;3;) "b" (type (eq 2)))
          (type (;4;) u16)
          (export (;5;) "c" (type (eq 4)))
          (export (;6;) "d" (type (sub resource)))
        )
      )
      (import "test:pkg/r" (instance (;0;) (type 0)))
      (alias export 0 "a" (type (;1;)))
      (alias export 0 "b" (type (;2;)))
      (alias export 0 "c" (type (;3;)))
      (type (;4;)
        (instance
          (alias outer 1 1 (type (;0;)))
          (export (;1;) "a" (type (eq 0)))
          (alias outer 1 2 (type (;2;)))
          (export (;3;) "b" (type (eq 2)))
          (alias outer 1 3 (type (;4;)))
          (export (;5;) "c" (type (eq 4)))
          (type (;6;) (list u8))
          (type (;7;) (tuple s8 u16 s16))
          (type (;8;) (option u32))
          (type (;9;) (record (field "a" 6) (field "b" 7) (field "c" 8)))
          (export (;10;) "n" (type (eq 9)))
          (type (;11;) (tuple 10 10 10))
          (type (;12;) (variant (case "foo") (case "bar" 10) (case "baz" 11)))
          (export (;13;) "o" (type (eq 12)))
          (type (;14;) (flags "foo" "bar" "baz"))
          (export (;15;) "p" (type (eq 14)))
          (type (;16;) (tuple 5 3 1))
          (type (;17;) (func (param "a" 1) (param "b" 3) (param "c" 5) (result 16)))
          (export (;0;) "f" (func (type 17)))
        )
      )
      (export (;1;) "test:pkg/s" (instance (type 4)))
    )
  )
  (export $s (;41;) "s" (type 40))
  (type (;42;)
    (component
      (type (;0;)
        (component
          (type (;0;)
            (instance
              (type (;0;) string)
              (export (;1;) "a" (type (eq 0)))
              (type (;2;) u16)
              (export (;3;) "b" (type (eq 2)))
              (type (;4;) u16)
              (export (;5;) "c" (type (eq 4)))
              (export (;6;) "d" (type (sub resource)))
            )
          )
          (import "test:pkg/r" (instance (;0;) (type 0)))
          (alias export 0 "a" (type (;1;)))
          (alias export 0 "b" (type (;2;)))
          (alias export 0 "c" (type (;3;)))
          (import "a" (type (;4;) (eq 1)))
          (import "b" (type (;5;) (eq 2)))
          (import "c" (type (;6;) (eq 3)))
          (type (;7;) (tuple 6 5 4))
          (type (;8;) (func (param "a" 4) (param "b" 5) (param "c" 6) (result 7)))
          (import "f" (func (;0;) (type 8)))
          (type (;9;) (list u8))
          (type (;10;) (tuple s8 u16 s16))
          (type (;11;) (option u32))
          (type (;12;) (record (field "a" 9) (field "b" 10) (field "c" 11)))
          (import "n" (type (;13;) (eq 12)))
          (type (;14;) (tuple 13 13 13))
          (type (;15;) (variant (case "foo") (case "bar" 13) (case "baz" 14)))
          (import "o" (type (;16;) (eq 15)))
          (type (;17;) (flags "foo" "bar" "baz"))
          (import "p" (type (;18;) (eq 17)))
          (type (;19;) (tuple 13 16 18))
          (type (;20;) (func (param "a" 4) (param "b" 5) (param "c" 6) (result 19)))
          (export (;1;) "f" (func (type 20)))
        )
      )
      (export (;0;) "test:pkg/t" (component (type 0)))
    )
  )
  (export $t (;43;) "t" (type 42))
  (export $a2 (;44;) "a2" (type $a))
  (export $b2 (;45;) "b2" (type $b))
  (export $c2 (;46;) "c2" (type $c))
  (export $d2 (;47;) "d2" (type $d))
  (export $e2 (;48;) "e2" (type $e))
  (export $f2 (;49;) "f2" (type $f))
  (export $g2 (;50;) "g2" (type $g))
  (export $h2 (;51;) "h2" (type $h))
  (export $i2 (;52;) "i2" (type $i))
  (export $j2 (;53;) "j2" (type $j))
  (export $k2 (;54;) "k2" (type $k))
  (export $l2 (;55;) "l2" (type $l))
  (export $n2 (;56;) "n2" (type $n))
  (export $m2 (;57;) "m2" (type $m))
  (export $o2 (;58;) "o2" (type $o))
  (export $p2 (;59;) "p2" (type $p))
  (export $q2 (;60;) "q2" (type $q))
  (@producers
    (processed-by "wac-parser" "0.3.0-dev")
  )
)
