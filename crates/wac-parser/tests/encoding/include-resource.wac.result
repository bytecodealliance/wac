(component
  (type (;0;)
    (instance
      (export (;0;) "fields" (type (sub resource)))
      (export (;1;) "headers" (type (eq 0)))
    )
  )
  (import "test:comp/types" (instance (;0;) (type 0)))
  (alias export 0 "fields" (type (;1;)))
  (type (;2;)
    (instance
      (alias outer 1 1 (type (;0;)))
      (export (;1;) "headers" (type (eq 0)))
      (type (;2;) (own 1))
      (type (;3;) (func (result 2)))
      (export (;0;) "get-headers" (func (type 3)))
    )
  )
  (import "test:comp/incoming-request" (instance (;1;) (type 2)))
  (type (;3;)
    (component
      (type (;0;)
        (instance
          (export (;0;) "fields" (type (sub resource)))
          (export (;1;) "headers" (type (eq 0)))
        )
      )
      (import "test:comp/types" (instance (;0;) (type 0)))
      (alias export 0 "fields" (type (;1;)))
      (type (;2;)
        (instance
          (alias outer 1 1 (type (;0;)))
          (export (;1;) "headers" (type (eq 0)))
          (type (;2;) (own 1))
          (type (;3;) (func (result 2)))
          (export (;0;) "get-headers" (func (type 3)))
        )
      )
      (import "test:comp/incoming-request" (instance (;1;) (type 2)))
    )
  )
  (import "unlocked-dep=<foo:bar>" (component (;0;) (type 3)))
  (instance $x (;2;) (instantiate 0
      (with "test:comp/types" (instance 0))
      (with "test:comp/incoming-request" (instance 1))
    )
  )
  (@producers
    (processed-by "wac-parser" "0.3.0-dev")
  )
)
